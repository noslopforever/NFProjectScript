//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace nf.protoscript.test {
    using System;
    
    
    /// <summary>
    ///   一个强类型的资源类，用于查找本地化的字符串等。
    /// </summary>
    // 此类是由 StronglyTypedResourceBuilder
    // 类通过类似于 ResGen 或 Visual Studio 的工具自动生成的。
    // 若要添加或移除成员，请编辑 .ResX 文件，然后重新运行 ResGen
    // (以 /str 作为命令选项)，或重新生成 VS 项目。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   返回此类使用的缓存的 ResourceManager 实例。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("npsParser.test.ClassTranslator.70.resx70.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   重写当前线程的 CurrentUICulture 属性，对
        ///   使用此强类型资源类的所有资源查找执行重写。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   查找类似 - Name: Get
        ///  Params: []
        ///  Condition: Type_Name == &apos;Constant&apos;
        ///  Code: ${ValueString}
        ///- Name: Get
        ///  Params: []
        ///  Condition: Type_Name == &apos;Constant&apos; &amp; ValueType == &apos;string&apos;
        ///  Code: &apos;&quot;${ValueString}&quot;&apos;
        ///- Name: Get
        ///  Params: []
        ///  Condition: Type_Name == &apos;BinaryOp&apos;
        ///  Code: ${LHS.Get()} ${OpCode} ${RHS.Get()}
        ///- Name: Get
        ///  Params: []
        ///  Condition: Type_Name == &apos;UnaryOp&apos;
        ///  Code: ${OpCode} ${RHS.Get()}
        ///- Name: Get
        ///  Params: []
        ///  Condition: Type_Name == &apos;Assign&apos;
        ///  Code: ${LHS.Set(RHS.Get())}
        ///- Name [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string ExpressionSchemes {
            get {
                return ResourceManager.GetString("ExpressionSchemes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 - Name: CommonTypeTranslator
        ///  Params: []
        ///  Condition: &quot;&quot;
        ///  Code: |
        ///    class ${Name} {
        ///        constructor() {
        ///            ${for(&apos;member&apos;, $NL, &apos;PropertyInit&apos;)}
        ///        }
        ///        ${for(&apos;method&apos;, $NL, &apos;MethodDecl&apos;)}
        ///    }
        ///
        ///- Name: PropertyInit
        ///  Params: []
        ///  Condition: &quot;&quot;
        ///  Code: this.${Name} = ${InitSyntax.Get()};
        ///
        ///- Name: MethodDecl
        ///  Params: []
        ///  Condition: &quot;&quot;
        ///  Code: |
        ///    function ${Name}(${for(&quot;member&quot;, &quot;, &quot;, &quot;MethodParamDecl&quot;)}) {
        ///        ${InitSyntax.MethodBody()}
        ///    }
        ///
        ///- Na [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string Schemes_GearsetJSTranslatorSchemes {
            get {
                return ResourceManager.GetString("Schemes_GearsetJSTranslatorSchemes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 - Name: CommonTypeTranslator
        ///  Params: []
        ///  Condition: &quot;&quot;
        ///  Code: |
        ///    &lt;${Header} Name=&quot;${Name}&quot;&gt;
        ///        &lt;properties&gt;
        ///            ${for(&quot;member&quot;, $NL, &quot;PropertyTranslator&quot;)}
        ///        &lt;/properties&gt;
        ///        &lt;ctor&gt;
        ///            ${for(&quot;member&quot;, $NL, &quot;CtorInitTranslator&quot;)}
        ///        &lt;/ctor&gt;
        ///        &lt;methods&gt;
        ///            ${for(&quot;method&quot;, $NL, &quot;MethodTranslator&quot;)}
        ///        &lt;/methods&gt;
        ///    &lt;/${Header}&gt;
        ///
        ///- Name: PropertyTranslator
        ///  Params: []
        ///  Condition: &quot;&quot;
        ///  Code: |
        ///    &lt;${Header} Name=&quot;${Name}&quot; Ty [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string Schemes_XmlTranslatorSchemes {
            get {
                return ResourceManager.GetString("Schemes_XmlTranslatorSchemes", resourceCulture);
            }
        }
    }
}
